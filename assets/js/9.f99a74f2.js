(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{713:function(e,t,a){e.exports=a.p+"assets/img/gh-create-project-part1.df6788aa.png"},714:function(e,t,a){e.exports=a.p+"assets/img/gh-create-project-part2.029c7913.png"},715:function(e,t,a){e.exports=a.p+"assets/img/gh-board-menu.2c0c99b1.png"},716:function(e,t,a){e.exports=a.p+"assets/img/gh-board-menu-ellipses.d2444433.png"},717:function(e,t,a){e.exports=a.p+"assets/img/gh-board-team-perm.24c1438d.png"},718:function(e,t,a){e.exports=a.p+"assets/img/gh-board-collaborators.ace1de14.png"},719:function(e,t,a){e.exports=a.p+"assets/img/gh-note-to-issue.a42a58ae.png"},720:function(e,t,a){e.exports=a.p+"assets/img/gh-note-to-issue-convert.f12ba339.png"},721:function(e,t,a){e.exports=a.p+"assets/img/gh-issue-details.f889d454.png"},722:function(e,t,a){e.exports=a.p+"assets/img/gh-board-overview-01.a71b63ec.png"},723:function(e,t,a){e.exports=a.p+"assets/img/gh-board-overview-02.a889b073.png"},724:function(e,t,a){e.exports=a.p+"assets/img/gh-board-overview-03.0ba2bfa6.png"},725:function(e,t,a){e.exports=a.p+"assets/img/gh-board-overview-04.3907ac33.png"},726:function(e,t,a){e.exports=a.p+"assets/img/gh-compare-and-pr.48e2df93.png"},727:function(e,t,a){e.exports=a.p+"assets/img/gh-open-pr.4894bd64.png"},728:function(e,t,a){e.exports=a.p+"assets/img/gh-board-automation-rules.847c02d2.png"},729:function(e,t,a){e.exports=a.p+"assets/img/gh-merge-pr.f93445d1.png"},921:function(e,t,a){"use strict";a.r(t);var o=a(35),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"challenge-01-github-project-boards"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#challenge-01-github-project-boards"}},[e._v("#")]),e._v(" Challenge 01: GitHub project boards")]),e._v(" "),o("p",[e._v("‚è≤Ô∏è "),o("em",[e._v("Est. time to complete: 20 min.")]),e._v(" ‚è≤Ô∏è")]),e._v(" "),o("h2",{attrs:{id:"here-is-what-you-will-learn-üéØ"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#here-is-what-you-will-learn-üéØ"}},[e._v("#")]),e._v(" Here is what you will learn üéØ")]),e._v(" "),o("p",[e._v("In this challenge you will learn how to:")]),e._v(" "),o("ul",[o("li",[e._v("Create a GitHub project board")]),e._v(" "),o("li",[e._v("Assign permissions to a team")]),e._v(" "),o("li",[e._v("Add project administrators")]),e._v(" "),o("li",[e._v("Working with cards")]),e._v(" "),o("li",[e._v("Plan milestones (sprints)")]),e._v(" "),o("li",[e._v("Use GitHub labels to classify issues and pull requests")]),e._v(" "),o("li",[e._v("See how issues and pull requests flow automatically through the different board's columns")])]),e._v(" "),o("h2",{attrs:{id:"table-of-content"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#table-of-content"}},[e._v("#")]),e._v(" Table of content")]),e._v(" "),o("ol",[o("li",[o("a",{attrs:{href:"#create-a-github-project-board"}},[e._v("Create a GitHub project board")])]),e._v(" "),o("li",[o("a",{attrs:{href:"#assign-permissions-to-a-team"}},[e._v("Assign permissions to a team")])]),e._v(" "),o("li",[o("a",{attrs:{href:"#add-project-administrators"}},[e._v("Add project Administrators")])]),e._v(" "),o("li",[o("a",{attrs:{href:"#working-with-cards"}},[e._v("Working with cards")])]),e._v(" "),o("li",[o("a",{attrs:{href:"#use-github-labels-to-classify-issues-and-pull-requests"}},[e._v("Use GitHub labels to classify issues and pull requests")])]),e._v(" "),o("li",[o("a",{attrs:{href:"#use-github-labels-to-categorize-issues-and-pull-requests"}},[e._v("See how issues and pull requests flow automatically through the different board's columns")])]),e._v(" "),o("li",[o("a",{attrs:{href:"#plan-your-work-for-day4"}},[e._v("Plan your work for day4")])]),e._v(" "),o("li",[o("a",{attrs:{href:"#summary-and-outlook"}},[e._v("Summary and outlook")])])]),e._v(" "),o("h2",{attrs:{id:"create-a-github-project-board"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#create-a-github-project-board"}},[e._v("#")]),e._v(" Create a GitHub project board")]),e._v(" "),o("p",[e._v("Project boards on GitHub help you organize and prioritize your work. You can\ncreate project boards for specific feature work, comprehensive roadmaps or even\nrelease checklists. With project boards, you have the flexibility to create\ncustomized workflows that suit your needs.")]),e._v(" "),o("p",[e._v("To organize and prioritize your work, we are going to create a project\nboard at the organizational level. Of course it's possible to create a board on\nrepository level, but as we will create more repositories during the day and we\nwant to visualize our work across all repositories, we create a board on\norganization level. GitHub provides different templates for a project board.\nToday, we use the template "),o("em",[e._v("Automated Kanban")]),e._v(". With this template, we get a\nsimple board with three columns:")]),e._v(" "),o("ul",[o("li",[o("strong",[e._v("To do")]),e._v(", for cards that represent future work")]),e._v(" "),o("li",[o("strong",[e._v("In progress")]),e._v(", to display cards we are currently working on")]),e._v(" "),o("li",[o("strong",[e._v("Done")]),e._v(", cards we have completed")])]),e._v(" "),o("p",[e._v("Let us create the project board. Navigate to the "),o("em",[e._v("Project")]),e._v(" section of your\norganization and create a new project. Name the project "),o("em",[e._v("AzDC-Day4-Project")]),e._v(" and\ngive it a description.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(713),alt:"GitHub create project - step 1"}})]),e._v(" "),o("p",[e._v("Select the "),o("em",[e._v("Automated kanban")]),e._v(" template and choose "),o("em",[e._v("Private")]),e._v(" for the visibility\nof the project. Link the project to your repository "),o("em",[e._v("myfirst-repo")]),e._v(" as well to be\nable to show issues and pull requests on the board later.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(714),alt:"GitHub create project - step 2"}})]),e._v(" "),o("p",[e._v("After the project has been created, we can add notes to plan and track our work.\nSome example notes are created in the "),o("em",[e._v("To Do")]),e._v(" column of the board.\nYou can delete these notes, as we don't need them. A project board is made up of\nissues, pull requests and notes which are displayed as cards. Cards are\ncategorized in columns of your choice. We can move cards from one column to\nanother. As we have selected the "),o("em",[e._v("Automated kanban")]),e._v(" template, the board is made\nup of three columns, but you can add more columns to the board to categorize\ncards the way you want.")]),e._v(" "),o("p",[e._v("The project is already linked to the repository "),o("em",[e._v("myfirst-repo")]),e._v(". There is a\n"),o("em",[e._v("Menu")]),e._v(" button at the upper right corner of the board. When you click the button,\nyou get an overview of activities and a list of linked repositories.")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("üìù If the button is not visible, there is the fly-out displayed that allows you\nto add cards. Close it and you will see the Menu button.")])]),e._v(" "),o("p",[o("img",{attrs:{src:a(715),alt:"GitHub project board menu"}})]),e._v(" "),o("h2",{attrs:{id:"assign-permissions-to-a-team"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#assign-permissions-to-a-team"}},[e._v("#")]),e._v(" Assign permissions to a team")]),e._v(" "),o("p",[e._v("Only project creators, organization owners and project members can add and manage cards.\nWe need to assign permissions to a team so they can create and items on the board.\nOpen the board's menu again. Click the ellipsis "),o("code",[e._v("...")]),e._v(" button and open the\n"),o("em",[e._v("Settings")]),e._v(".")]),e._v(" "),o("p",[o("img",{attrs:{src:a(716),alt:"GitHub board menu ellipses"}})]),e._v(" "),o("p",[e._v("In the "),o("em",[e._v("Options")]),e._v(" section you can manage the visibility of the project and\norganization member's permissions. "),o("em",[e._v("Write")]),e._v(" is the default baseline permission\nlevel for all members of the organization.")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("üìù To restrict access to all organization members, set Read as baseline permission level.")])]),e._v(" "),o("p",[e._v("Since we are working with a single team in our organization today and we may\nhave already added "),o("em",[e._v("Outside collaborators")]),e._v(" to this team, we still need to give\n"),o("em",[e._v("Write")]),e._v(" permissions to this team. Navigate to the "),o("em",[e._v("Teams")]),e._v(" section and assign\n"),o("em",[e._v("Write")]),e._v(" permissions to the "),o("em",[e._v("AzDC-Team")]),e._v(" team.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(717),alt:"GitHub board team permissions"}})]),e._v(" "),o("h2",{attrs:{id:"add-project-administrators"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#add-project-administrators"}},[e._v("#")]),e._v(" Add project Administrators")]),e._v(" "),o("p",[e._v("As the organization owner and project creator, only you have full administrative\nrights in this project. We can make both members of the organization, but also\n"),o("em",[e._v("Outside collaborators")]),e._v(" project administrators. In the "),o("em",[e._v("Collaborators")]),e._v(" section\nyou can add collaborators and give them "),o("em",[e._v("Admin")]),e._v(" permissions.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(718),alt:"GitHub board collaborators"}})]),e._v(" "),o("h2",{attrs:{id:"working-with-cards"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#working-with-cards"}},[e._v("#")]),e._v(" Working with cards")]),e._v(" "),o("p",[e._v("If we want to plan and prioritize our work, we can work with notes in the board.\nYou can add notes to serve as task reminders or to add information related to\nthe project you are working on.")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("üìù You can format your notes using Markdown syntax.")])]),e._v(" "),o("p",[e._v("Let's create a note and take a closer look at how to convert the note into an\nissue when you start working.")]),e._v(" "),o("p",[e._v("Click the "),o("em",[e._v("+")]),e._v(" button in the "),o("em",[e._v("To do")]),e._v(" column to add a note and set the following\ntext:")]),e._v(" "),o("div",{staticClass:"language-Text extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("#### Convert note to issue.\n\nA sample note to see how a note is converted to an issue.\n")])])]),o("p",[e._v("Now let's create another note to take a closer look at how we can reference an\nissue. Add the node and set the following text:")]),e._v(" "),o("div",{staticClass:"language-Text extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("#### Reference an issue\n\nA sample note to see how a note can reference an issue.\n")])])]),o("p",[e._v("You can drag and drop to reorder notes and move them between columns.")]),e._v(" "),o("p",[e._v("Now let us convert the first note "),o("em",[e._v("Convert note to issue")]),e._v(" to an issue to assign\nit to a repository.")]),e._v(" "),o("p",[e._v("Click the ellipsis "),o("em",[e._v("...")]),e._v(" button on the "),o("em",[e._v("Convert to issue")]),e._v(" card and click\n"),o("em",[e._v("Convert to issue")]),e._v(".")]),e._v(" "),o("p",[o("img",{attrs:{src:a(719),alt:"GitHub note to issue"}})]),e._v(" "),o("p",[e._v("Choose the "),o("em",[e._v("myfirst-repo")]),e._v(" repository and convert the note to an issue.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(720),alt:"GitHub note to issue convert"}})]),e._v(" "),o("p",[e._v("After the converting the note, open the issue detail and have a look at the\nadditional option we have, to specify more information about the issue. Make\nyourself the assignee of the issue and set the label "),o("em",[e._v("good first issue")]),e._v(".")]),e._v(" "),o("p",[o("img",{attrs:{src:a(721),alt:"GitHub issue details"}})]),e._v(" "),o("p",[e._v("Your board should now look like this:")]),e._v(" "),o("p",[o("img",{attrs:{src:a(722),alt:"GitHub board overview-01"}})]),e._v(" "),o("p",[e._v("Now you may wonder why you convert a note into an issue. In an issue we can\nadditionally specify more detailed information. We can specify who is\nresponsible for the issue, which repository it refers to and we can assign\nlabels to classify the issue. With this approach, we could map the following\nworkflow:")]),e._v(" "),o("p",[e._v("We use notes to plan and prioritize the work for our next milestone (sprint).\nWhen we start working on the task, we convert the note into an issue, choose a\nrepository, assign a responsible person, classify it and push it to the "),o("em",[e._v("In\nprogress")]),e._v(" column.")]),e._v(" "),o("p",[e._v("This is a very simple but agile process flow. But maybe this flow is not\nsufficient, especially if notes do not always refer to only one repository, but\nare spread over several repositories. Notes can be used to summarize issues in\ndifferent repositories. If we work according to agile methods, we can e.g. store\na "),o("em",[e._v("UserStory")]),e._v(" as a note in our board and create tasks in different repositories\nas an issue. Or we can go one level higher and use Notes to map "),o("em",[e._v("Features")]),e._v(" and\nIssues to map "),o("em",[e._v("UserStories")]),e._v(" in a repository. Ultimately, there are many ways to\nmap an agile process with GitHub project boards. There is no one-size-fits-all\nsolution.")]),e._v(" "),o("p",[e._v("Finally, let's look at how we can reference Issues in a note. Navigate to your\n"),o("em",[e._v("myfirst-repo")]),e._v(" repository and go to the "),o("em",[e._v("Issues")]),e._v(" section. You see that there is\nalready an issue listed. It's the issue that we created earlier. Now, add a new\nIssue name it "),o("em",[e._v("Referenced Issue")]),e._v(", set the label "),o("em",[e._v("good first issue")]),e._v(", assign\nyourself and submit the new issue. Copy the issue's URL from the browser's\naddress bar and go back to your project board. Edit the note "),o("em",[e._v("Reference an\nissue")]),e._v(" and paste the issue's URL.")]),e._v(" "),o("p",[e._v("Your board should now look like this:")]),e._v(" "),o("p",[o("img",{attrs:{src:a(723),alt:"GitHub board overview-02"}})]),e._v(" "),o("h2",{attrs:{id:"plan-milestones-sprints"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#plan-milestones-sprints"}},[e._v("#")]),e._v(" Plan milestones (sprints)")]),e._v(" "),o("p",[e._v("You can use milestones to group and track on groups of issues and pull requests\nin a repository. Unfortunately you can not define milestones at organization\nlevel. Therefore it's not possible to set a uniform rhythm for all projects\nwithin an organization. Instead you have to define milestones in each repository\nand keep them in sync.")]),e._v(" "),o("p",[e._v("Milestones would be an excellent way to plan a Sprint. But as mentioned,\nmilestones cannot be created on an organizational level. We need to find another\nway to assign tasks to a Sprint. For example, we could work with labels and\ncreate a label for each Sprint. We can then assign these Sprint labels to issues\nand pull requests.")]),e._v(" "),o("p",[e._v("Another option would be to create a new project for each sprint and put the\nsprint name at the end of the project name.")]),e._v(" "),o("p",[e._v("If you want to take a closer look at Milestones, check out the GitHub\ndocumentation\n"),o("a",{attrs:{href:"https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/about-milestones",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("h2",{attrs:{id:"use-github-labels-to-classify-issues-and-pull-requests"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#use-github-labels-to-classify-issues-and-pull-requests"}},[e._v("#")]),e._v(" Use GitHub labels to classify issues and pull requests")]),e._v(" "),o("p",[e._v("GitHub labels are used to classify issues, pull requests and discussions. You\ncan apply labels in the repository the label was created in. As with Milestones\nit is not possible to manage labels at organization level, but you can manage\ndefault labels which are automatically added to a repository when the repository\nis created.")]),e._v(" "),o("p",[e._v("Now we want to add two new default labels which will be added to each new\nrepository. Navigate to your organization's settings, go to "),o("em",[e._v("Repository\ndefaults")]),e._v(" and add the following labels:")]),e._v(" "),o("table",[o("thead",[o("tr",[o("th",[e._v("Name")]),e._v(" "),o("th",[e._v("Description")]),e._v(" "),o("th",[e._v("Color")])])]),e._v(" "),o("tbody",[o("tr",[o("td",[e._v("azdc-challenege")]),e._v(" "),o("td",[e._v("An AzDC-Challenge")]),e._v(" "),o("td",[o("em",[e._v("your choice")])])]),e._v(" "),o("tr",[o("td",[e._v("azdc-breakout")]),e._v(" "),o("td",[e._v("An AzDC-Breakout session")]),e._v(" "),o("td",[o("em",[e._v("your choice")])])])])]),e._v(" "),o("p",[e._v("We have to add these labels to the "),o("em",[e._v("myfirst-repo")]),e._v(" manually,\nbecause there is no syncing in the background to add these labels to already\ncreated repositories. Navigate to "),o("em",[e._v("myfirst-repo")]),e._v(", go to "),o("em",[e._v("Issues")]),e._v(" and\nadd these labels.")]),e._v(" "),o("p",[e._v("Now go back to your project board and assign the "),o("em",[e._v("azdc-challenge")]),e._v(" label to both\nissues we created earlier.")]),e._v(" "),o("p",[e._v("Your board should look like this:")]),e._v(" "),o("p",[o("img",{attrs:{src:a(724),alt:"HitHub board overview-03"}})]),e._v(" "),o("p",[e._v("In the last part of this challenge we will describe how to plan the rest of the\nwork for today. We will add a note now for the "),o("em",[e._v("Breakout Session")]),e._v(" where we\nwill deploy the Azure Developer College's sample application to Azure with\nGitHub Actions workflows. Add the note with the following text:")]),e._v(" "),o("div",{staticClass:"language-Text extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("#### Deploy the sample application\n\nUse GitHub Actions workflows to deploy the sample application to your Azure\nsubscription.\n")])])]),o("p",[e._v("Labels help us to classify our issues. We can filter the board by labels etc. to\nget a reduced view on our project. Click on the "),o("code",[e._v("filters/search")]),e._v(" box in the board\nto get an overview of how filtering works in GitHub. Try to filter by the label\n"),o("em",[e._v("azdc-challenge")]),e._v(".")]),e._v(" "),o("h2",{attrs:{id:"see-how-issues-and-pull-requests-flow-automatically-through-the-different-board-s-columns"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#see-how-issues-and-pull-requests-flow-automatically-through-the-different-board-s-columns"}},[e._v("#")]),e._v(" See how issues and pull requests flow automatically through the different board's columns")]),e._v(" "),o("p",[e._v("In the previous section we have seen how we can use a project board to plan our\nwork. Now it's time to see how an issue and a pull request automatically flow\nthrough the different board's column to track progress. We add a new\n"),o("em",[e._v("Note")]),e._v(", convert it to an issue and edit the "),o("em",[e._v("README.md")]),e._v(" file within a feature\nbranch. We commit and push changes to the feature branch and create a pull\nrequest to merge these changes to the "),o("em",[e._v("main")]),e._v(" branch.")]),e._v(" "),o("p",[e._v("First, go to your project board and add a "),o("em",[e._v("Note")]),e._v(" with the following text:")]),e._v(" "),o("div",{staticClass:"language-text extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("Issue and Pull Request\n\nChange README.md in a feature branch, commit and push changes and merge these\nchanges to the _main_ branch with a pull request\n")])])]),o("p",[e._v("Next, convert the "),o("em",[e._v("Note")]),e._v(" to an issue, link it to the repository "),o("em",[e._v("myfirst-repo")]),e._v(",\nassign yourself and set the label "),o("em",[e._v("azdc-challenge")]),e._v(".")]),e._v(" "),o("div",{staticClass:"custom-block tip"},[o("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),o("p",[e._v("üìù Note down the issue's id, because we need it later to reference it in the\npull request. You can find the id after the '#' character.")])]),e._v(" "),o("p",[e._v("Your board should look like this:")]),e._v(" "),o("p",[o("img",{attrs:{src:a(725),alt:"GitHub board overview"}})]),e._v(" "),o("p",[e._v("Now, drag and drop the issue to the "),o("em",[e._v("In progress")]),e._v(" column to show project members\nthat you are working on that topic.")]),e._v(" "),o("p",[e._v("Open a terminal and navigate to the folder where you have cloned the repository.\nUse the "),o("em",[e._v("git branch")]),e._v(" and "),o("em",[e._v("git checkout")]),e._v(" commands to create a new branch and\ncheck it out:")]),e._v(" "),o("div",{staticClass:"language-shell extra-class"},[o("pre",{pre:!0,attrs:{class:"language-shell"}},[o("code",[o("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" branch issueprdemo\n"),o("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout issueprdemo\n\nor\n\n"),o("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b issueprdemo\n")])])]),o("p",[e._v("Change the text in the "),o("em",[e._v("README.md")]),e._v(" file and commit and push your changes:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('git add .\ngit commit -m "Changed text"\ngit push --set-upstream origin issueprdemo\n')])])]),o("p",[e._v("In your browser, navigate to the repository "),o("em",[e._v("myfirst-repo")]),e._v(" and go to the section\n"),o("em",[e._v("Pull requests")]),e._v(". You will see that GitHub informs us that there are recent\npushes to the branch "),o("em",[e._v("issueprdemo")]),e._v(" available. Click "),o("em",[e._v("Compare & pull request")]),e._v(".")]),e._v(" "),o("p",[o("img",{attrs:{src:a(726),alt:"GitHub compare and pull request"}})]),e._v(" "),o("p",[e._v("In the "),o("em",[e._v("Open a pull request")]),e._v(" view, set the label "),o("em",[e._v("azdc-challenge")]),e._v(" and the\nproject "),o("em",[e._v("AzDC-Day4-Project")]),e._v(" to link the pull request to the project. In the pull\nrequest's body we use the keyword "),o("em",[e._v("close")]),e._v(" and the character "),o("em",[e._v("#")]),e._v(" to link the pull\nrequest to our issue (please use your issue's id) and to inform GitHub that this\nissue is closed when the pull request is merged into the "),o("em",[e._v("main")]),e._v(" branch.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(727),alt:"GitHub open pull request"}})]),e._v(" "),o("p",[e._v("Navigate back to your project board. You will see that there is a new card with\nthe pull request symbol displayed. Why is the pull request displayed on the\nboard?")]),e._v(" "),o("p",[e._v("When we created the board we used the template "),o("em",[e._v("Automated kanban")]),e._v(" which comes\nwith predefined automation rules. These rules allows us to display issues and\npull requests on the board, as long as they are linked to our project. Both are\ndisplayed depending on their status in the columns of the board. You can find\nthe rules by clicking at the "),o("em",[e._v("Manage")]),e._v(" link in each column. Take your time and\ncheckout the rules for each column.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(728),alt:"GitHub"}})]),e._v(" "),o("p",[e._v("Now let's look at how both cards automatically move from the "),o("em",[e._v("In progress")]),e._v("\ncolumn to the "),o("em",[e._v("Done")]),e._v(" column when we complete our pull request. To do this, we\nnavigate to the open pull request and merge it into the "),o("em",[e._v("main")]),e._v(" branch.")]),e._v(" "),o("p",[o("img",{attrs:{src:a(729),alt:"GitHub merge pull request"}})]),e._v(" "),o("p",[e._v("After the pull request is merged, we see that both cards were moved to the\n"),o("em",[e._v("Done")]),e._v(" column.")]),e._v(" "),o("h2",{attrs:{id:"plan-your-work-for-day4"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#plan-your-work-for-day4"}},[e._v("#")]),e._v(" Plan your work for day4")]),e._v(" "),o("p",[e._v("As the day goes on, we will keep reflecting our work on the board in the\nchallenges that are still to come. In the respective challenges it's pointed out\nto create "),o("em",[e._v("Notes")]),e._v(" or "),o("em",[e._v("Issues")]),e._v(" and to link them to our project.")]),e._v(" "),o("h2",{attrs:{id:"summary-and-outlook"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#summary-and-outlook"}},[e._v("#")]),e._v(" Summary and outlook")]),e._v(" "),o("p",[e._v("We have seen how to plan and track our work with GitHub project boards. There\nare many ways to map an agile process, but certainly no one-size-fits-all\nsolution. Projects can be created and managed at the organizational or\nrepository level. Labels, milestones and issues are always\nassigned to a repository, which makes the handling of a project at the\norganizational level somewhat difficult, especially if you want to manage a\nproject across multiple repositories.")]),e._v(" "),o("p",[e._v("GitHub is working on the next generation of Project planning and it will be\nexciting to see how more complex planning scenarios can be managed with it. If\nyou are interested, why don't you sign up for the beta? "),o("a",{attrs:{href:"https://github.com/features/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Issues -\nProject planning for developers"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("p",[e._v("If you've already worked with Azure Boards, you can also connect Azure Boards to\nGitHub: "),o("a",{attrs:{href:"https://docs.microsoft.com/azure/devops/boards/github/?view=azure-devops",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Boards &\nGitHub"),o("OutboundLink")],1)]),e._v(" "),o("p",[o("RouterLink",{attrs:{to:"/day4/challenges/00-challenge-org.html"}},[e._v("‚óÄ Previous challenge")]),e._v(" | "),o("RouterLink",{attrs:{to:"/day4/"}},[e._v("üîº Day 4")]),e._v(" | "),o("RouterLink",{attrs:{to:"/day4/challenges/02-github-actions-intro.html"}},[e._v("Next challenge ‚ñ∂")])],1)])}),[],!1,null,null,null);t.default=s.exports}}]);